export PATH="/usr/local/bin:$PATH"

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

if
  which pyenv > /dev/null; then eval "$(pyenv init -)";
  rm ~/.pyenv/shims/*config
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

code () {
  if [[ $# = 0 ]]
  then
    open -a "Visual Studio Code"
  else
    [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
    open -a "Visual Studio Code" --args "$F"
  fi
}

HISTFILE=$HOME/.zhistory       # enable history saving on shell exit
setopt APPEND_HISTORY          # append rather than overwrite history file.
setopt HIST_EXPIRE_DUPS_FIRST  # allow dups, but expire old ones when I hit HISTSIZE
setopt EXTENDED_HISTORY        # save timestamp and runtime information

# disable XON/XOFF flow control
# stty -ixon

# bindkey "^S" history-incremental-search-forward

# export GOPATH="$HOME/Code/go/"
# export PATH="$PATH:$GOPATH/bin"

# eval $(/usr/local/bin/docker-machine env aws-docker)

# eval "$(pyenv init -)"

bindkey -M viins 'jj' vi-cmd-mode

PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/aaronkrauss/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/aaronkrauss/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/aaronkrauss/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/aaronkrauss/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1

export COMPOSER_HOME=/usr/local/bin/composer
